// "use strict";

/*
1. Для практикума из занятия 7 продумать, где можно применить замыкания.






2. Не выполняя кода, ответить, что выведет браузер и почему:

if (!("a" in window)) {
    var a = 1;
}
alert(a);
Синтаксис <если нет переменной "а" в "Глобал", но она инициализирована через var => не выполняется присвоение.
Итог: undefinded


var b = function a(x) {
    x && a(--x);
};
alert(a);

'a' является именнованной ссылкой на функцию с логическим выражением, которая содержиться в лексическом окружении переменной 'b'.
Итог: вызов в глобальном лексическом окружении вызывает ошибку, а - не определено

function a(x) {
    return x * 2;
}
var a;
alert(a);

'a' является именнованной ссылкой на функцию с логическим выражением, которая содержиться в глобальном лексическом окружении.
Итог: вызов в глобальном лексическом окружении: 'а' содержит ссылку на функцию


function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);

Arguments является объектом лексического окружения функции и изменяется внутри функции,
но если вызов обращен к вводимым данным они будут оставаться не изменными
Итог: a = 3


function a() {
    alert(this);
}
a.call(null);

оператор call определяется инициатора вызова (null)
Итог: null
 */

/*
sum (a)(b)...(n) =>
a + b + ... + n
 */

function sum(a) {
    let sumCur = a;
    function foo(b) {
        sumCur += b;
        return foo;
    }
    foo.toString = function() {
        return sumCur;
    }
    return foo;
}

alert(sum(1)(2)(3)(3)(10))

